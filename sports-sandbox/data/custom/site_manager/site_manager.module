<?php

/**
 * @file
 * Module file for site_manager.
 */

use Drupal\Core\Url;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\node\Entity\Node;
use Drupal\taxonomy\Entity\Term;
use Drupal\views\ViewExecutable;
use Drupal\paragraphs\Entity\Paragraph;

function site_manager_create_add_content_link($content_type, $label) {
 if ($content_type == 'match_players') {
   $current_path = \Drupal::service('path.current')->getPath();
   $path_args = explode('/', $current_path);
   if (is_array($path_args) && !empty($path_args[3])) {
     $nid = $path_args[3];
   }
   $url = Url::fromRoute( 'node.add',array('node_type' => $content_type), array('query' => ['nid' => $nid]));
 }
 else {
   $url = Url::fromRoute( 'node.add',array('node_type' => $content_type));
 }
 $add_content_link = '<div class="add-link-wrapper">';
 $add_content_link .= \Drupal::l(t($label), $url);
 $add_content_link .= '</div>';
 return $add_content_link;
}

/**
 * Implements hook_ENTITY_TYPE_presave() for node entities.
 */
function site_manager_node_presave(EntityInterface $node) {
  
  $type = $node->getType();
  if ($type == 'match_players') {
    $title = $node->getTitle();
    $target_id = $node->field_mp_match->target_id;
    $target_node = Node::load($target_id);
    $target_title = $target_node->getTitle();
    $node->setTitle($target_title);
  }
  if ($type == 'tournaments') {
    $term_id = $node->field_tour_type->target_id;
    $term = Term::load($term_id);
    $name = $term->getName();
    $node->setTitle($name);
  }  
  if ($type == 'franchise_master') {
    $term_id = $node->field_fm_franchise->target_id;
    $term = Term::load($term_id);
    $name = $term->getName();
    $node->setTitle($name);
  }  
}

function site_manager_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  //echo $form_id;
 
  if ($form_id == 'node_match_players_form') {
	if (isset($_GET['nid']) && !empty($_GET['nid'])) {
	  $form['field_mp_match']['widget']['#default_value'][0] = $_GET['nid'];
	}
	//echo "<pre>"; print_r($form['field_mp_match']);die;
    $form['title']['widget'][0]['value']['#default_value'] = 'test';
  } 	
  if ($form_id == 'node_tournaments_form') {
    $form['title']['widget'][0]['value']['#default_value'] = 'test';
  }
  if ($form_id == 'node_franchise_master_form') {
    $form['title']['widget'][0]['value']['#default_value'] = 'test';
  }  
}

function site_manager_preprocess_views_view_field(&$variables) {
  $view = $variables['view'];
  $row = $variables['row'];
  if ($view->id() == 'upcoming_matches' && $variables['field']->realField == 'nid') {
    // Prepare all franchise term array
    $terms = \Drupal::entityManager()->getStorage('taxonomy_term')->loadTree("franchise");
    $field_array = array();
    $term_data = array();
    foreach ($terms as $term) {
      $term_data[$term->tid] = $term->name;
    }
	// Prepare all user array
	$all_users = user_load_multiple();
	$user_array = array();
	foreach($all_users as $user) {
	  $user_array[$user->get('uid')->value] = $user->get('name')->value;
	}
	//Get matchplayer node id
	$query = \Drupal::database()->select('node__field_mp_match', 'n');
	$query->addField('n', 'entity_id');
	$query->condition('n.field_mp_match_target_id', $row->nid);
	$mp_id = $query->execute()->fetchField();

	//Get all node for franchise master
	$franch_array = array();
	$franch_nids = \Drupal::entityQuery('node')
	  ->condition('type', 'franchise_master')
	  ->execute();
	$franch_nodes = Node::loadMultiple($franch_nids);
	foreach ($franch_nodes as $franch_node) {
	   if ($franch_node->field_fm_season->target_id == 2) {
		$franch_array[$franch_node->getTitle()] = array();
		 $franch_paragraph = $franch_node->field_fm_franchise_players->getValue();
		 foreach ( $franch_paragraph as $franch_element ) {
		   $franch_p = Paragraph::load($franch_element['target_id']);
		   $franch_user_id = $franch_p->field_sp_player->target_id;
		   $franch_array[$franch_node->getTitle()][] = $user_array[$franch_user_id];
		 }
	   }
	}
	// Load Match node
    $node = Node::load($row->nid);
    $paragraph = $node->field_match_teams->getValue();
    $franchise = array();
    foreach ( $paragraph as $element ) {
      $p = Paragraph::load($element['target_id']);
	  $term_id = $p->field_tap_team->target_id;
	  $field_array[$term_data[$term_id]] = array();
	}
	$mp_node = Node::load($mp_id);
	$mp_paragraph = $mp_node->field_mp_franchise_players_poin->getValue();
	$mp_players = array();
	$mp_points = array();
	foreach ( $mp_paragraph as $mp_element ) {
      $mp_para = Paragraph::load($mp_element['target_id']);
	  $mp_user_id = $mp_para->field_pp_franchise_player->target_id;
	  $mp_players[] = $user_array[$mp_user_id];
	  $point = '--';
	  if (isset($mp_para->field_pp_player_points_earned->value) && !empty($mp_para->field_pp_player_points_earned->value)) {
	    $point = $mp_para->field_pp_player_points_earned->value;
	  }
	  $mp_points[$user_array[$mp_user_id]] = $point;
    }
    foreach ($field_array as $franchise => $franchise_value) {
	  $field_array[$franchise] = array_intersect($franch_array[$franchise], $mp_players);
    }
   
    /*
	$headers = array_keys($field_array);
	foreach($headers as $header_name) {
	  //$output .= '<th>' . $header_name . '</th>';
	}
	*/
	$output .= '<div class="upcoming-matches-para">';
	if (count($field_array)) {
	foreach($field_array as $out_field => $out_value) {
	  $output .= '<div class="upcoming-matches-para-div"><table><tr>';
	  $output .= '<th>' . $out_field . '</th><th>Points</th></tr>';
	  foreach ($out_value as $v) {
		$output .= '<tr><td>' . $v . '</td>';
		$output .= '<td>' . $mp_points[$v] . '</td></tr>';
	  }
	  $output .= '</table></div>';
	}
	}
	$output .= '</div>';
    $variables['output'] =  Drupal\Core\Render\Markup::create($output);
  }
}